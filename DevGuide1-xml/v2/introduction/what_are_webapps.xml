<!-- $Id: what_are_webapps.xml,v 1.2 2004/03/10 22:10:41 awiesmann Exp $ -->

<sect1>
	<title>
	What Are Web Applications? 
	</title>
	<para>
        In its most basic form a web application is a client/server
	software application that interacts with users or other
	systems using HTTP. For a user the client is most likely be a
	web browser like Microsoft Internet Explorer or Netscape
	Navigator; for another software application this would be an
	HTTP user agent that acts as a browser on behalf of the
	system. The end user views web pages and is able to interact
	by sending choices to the system. The functions performed can
	range from relatively simple tasks like reading content or
	searching a local directory for a file or reference, to highly
	sophisticated applications that perform real-time sales and
	inventory management across multiple business partners. The
	technology behind web applications has developed at the speed
	of light. Traditionally simple applications were built with a
	common gateway interface application (CGI) often written in C
	or Perl and typically running on the web server itself that
	maybe connected to a simple database (again often on the same
	host). Modern enterprise web applications typically are
	written in languages such as Java, C# or ASP.NET and run on
	distributed application servers, connecting to multiple data
	sources through complex business logic tiers. They can consist
	of hundreds or thousands of servers each performing specific
	tasks or functions.
        </para>

	<para>
	There is a lot of confusion about what a web application
	actually consists of and where the security problems
	lie. While it is true that the problems so often discovered
	and reported are product specific, they are often logic and
	design flaws in the application, and not necessarily flaws in
	the underlying web products or technology.
	</para>

	<mediaobject>
		<imageobject>
			<imagedata fileref="images/introduction/layer_overview.jpg" format="JPEG"/>
		</imageobject>
		<textobject>
		<phrase>Web Application Tiers</phrase>
		</textobject>
	</mediaobject>

	<para>
	It can help to think of a web application as being made up of three
	logical tiers or functions.
	</para>

	<para>
	Presentation Tiers are responsible for presenting the data to
	the end user or system. The web server serves up data and the
	web browser renders it into a readable form, which the user
	can then interpret. It also allows the user to interact by
	sending back parameters, which the web server can pass along
	to the application. This "Presentation Tier" includes web
	servers like Apache and Microsoft Internet Information Server
	and web browsers like Internet Explorer and Netscape
	Navigator. It may also include application components that
	create the page layout.
	</para>

	<para>
	The Application Tier is the "engine" of a web application. It performs
	the business logic; processing user input, making decisions, obtaining
	more data and presenting data to the Presentation Tier to send back to
	the user. The Application Tier may include technology like CGI's, Java (J2EE),
	or .NET services deployed in products like IBM WebSphere, BEA WebLogic or Apache Tomcat.
	</para>

	<para>
	A Data Tier is used to store things needed by the application and acts
	as a repository for both temporary and permanent data. It is the bank
	vault of a web application. Modern systems are typically now storing
	data in XML format for interoperability with other system and sources.
	</para>

	<para>
        Of course, small applications may consist of a simple C CGI
	program running on a local host, reading or writing files to
	disk.  In this case the three tiers are still present; it is
	simply the lines between them, which is blurred.
       </para>
</sect1>

