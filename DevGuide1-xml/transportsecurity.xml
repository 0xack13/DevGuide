<!-- $Id: transportsecurity.xml,v 1.6 2003/05/17 20:34:36 draphael Exp $ -->
<chapter id="transportsecurity.xml">
    <chapterinfo>
        <authorgroup>
            <author>
                <firstname>Mark</firstname>
                <surname>Curphey</surname>
            </author>
        </authorgroup>
    </chapterinfo>
    
    <title>Transport Security</title>
    
<sect1>
	<title>SSL and TLS</title>
	<para>
	When we see a URL with the pre-fix "https" it refers to HTTP over SSL.
        The Secure Socket Layer protocol or SSL was designed by Netscape and
	included in the Netscape Communicator browser. SSL is probably the
	widest spoken security protocol in the world and is built in to all
	commercial web browsers and web servers. Today many VPN technologies are
        migrating to use it over IPSec and it has become the defact and dejure 
        transport security protocol. The current version is Version 2. 
        As the original version of SSL designed by Netscape is technically a
	proprietary protocol the Internet Engineering Task Force (IETF) took
	over responsibilities for upgrading SSL and have now renamed it TLS or
	Transport Layer Security. The first version of TLS is version 3.1
	and has only minor changes from the original specification.
	</para>
        <para>
        In general SSL versions 1 and 2 were superseeded due to protocol security flaws
        and we recomend you only use versions 3 and TLS 1.0 on a security concious web site.
        </para>
	<para>
        SSL is certainly an important protocol to web applications but its use 
        has become ubiquitous with having a secure web site. Indeed many e-commece stores
        actively tell you "we are secure, we use 128 bit SSL". SSL of course provide 
        transport security only (an encrypted tunel from the web client to the web server) 
        which incorporates authentication using public key certificates if invoked. SSL does not
        secure a web site ! SSL can be part of the tool set to help you secure a web site and
        plays that imnportant role in protecting transport traffic, but is no silver bullet. And   
        SSL is not immune from its own share of security baggage and common configuration / deployment 
        errors that can lead to significant security issues.
        </para>
        <para>
	SSL can provide three security services for the transport of data to and
	from web services. Those are:
	</para>
	<itemizedlist mark="opencircle" spacing="compact">
		<listitem>
			<para>Entity Authentication</para>
		</listitem>
		<listitem>
			<para>Message Confidentiality</para>
		</listitem>
		<listitem>
			<para>Message Integrity</para>
		</listitem>
	</itemizedlist>
	<para>
	SSL uses both public key and symmetric cryptography. You will often here
	SSL certificates mentioned. SSL certificates are X.509 certificates. A
	certificate is a public key that is signed by another trusted user (with
	some additional information to validate that trust).
	</para>
	<para>
	For the purpose of simplicity we are going to refer to both SSL and TLS
	as SSL in this section. A more complete treatment of these protcols can
	be found in Stephen Thomas's "SSL and TLS Essentials".
	</para>
	<sect2>
		<title>How does SSL and TLS Work?</title>
		<para>
		SSL has two major modes of operation. The first is where the SSL
		tunnel is set up and only the server is authenticated, the
		second is where both the server and client are authenticated. In
		both cases the SSL session is setup before the HTTP transaction
		takes place.
		</para>
		<sect3>
			<title>SSL Negotiation with Server Only Authentication</title>
			<para>SSL negotiation with server authentication only is a nine-step process.</para>
			<mediaobject>
				<imageobject>
					<imagedata fileref="images/ssl_9_step.png" format="PNG" />
				</imageobject>
				<textobject>
					<phrase>SSL connection setup with only a
				server certificate</phrase>
				</textobject>
			</mediaobject>
			<orderedlist numeration="arabic" spacing="compact">
				<listitem>
					<para>The first step in the process is
					for the client to send the server a
					Client Hello message. This hello
					message contains the SSL version
					and the cipher suites the client
					can talk. The client sends its
					maximum key length details at
					this time. </para>
				</listitem>
				<listitem>
					<para>The server returns the hello
					message with one of its own in which it
					nominates the version of SSL and the
					ciphers and key lengths to be used in
					the conversation, chosen from the choice
					offered in the client hello.</para>
				</listitem>
				<listitem>
					<para>The server sends its digital
					certificate to the client for
					inspection. Most modern browsers
					automatically check the certificate
					(depending on configuration) and warn
					the user if it's not valid. By valid we
					mean if it does not point to a
					certification authority that is
					explicitly trusted or is out of date,
					etc.</para>
				</listitem>
				<listitem>
					<para>The server sends a server done
					message noting it has concluded the
					initial part of the setup
					sequence.</para>
				</listitem>
				<listitem>
					<para>The client generates a symmetric
					key and encrypts it using the
					server's public key (cert). It
					then sends this message to the
					server.</para>
				</listitem>
				<listitem>
					<para>The client sends a cipher spec
					message telling the server all future
					communication should be with the new
					key.</para>
				</listitem>
				<listitem>
					<para>The client now sends a Finished
					message using the new key to determine
					if the server is able to decrypt the
					message and the negotiation was
					successful.</para>
				</listitem>
				<listitem>
					<para>The server sends a Change Cipher
					Spec message telling the client that all
					future communications will be
					encrypted.</para>
				</listitem>
				<listitem>
					<para>The server sends its own Finished
					message encrypted using the key. If the
					client can read this message then the
					negotiation is successfully
					completed.</para>
				</listitem>
			</orderedlist>
		</sect3>
		<sect3>
			<title>SSL with both Client and Server Authentication</title>
			<para>
			SSL negotiation with mutual authentication (client and
			server) is a twelve-step process.
			</para>
			<mediaobject>
				<imageobject>
					<imagedata fileref="images/ssl_12_step.png" format="PNG" />
				</imageobject>
				<textobject>
					<phrase>SSL connection setup with both client
					and server certificates.</phrase>
				</textobject>
			</mediaobject>
			<para>
			The additional steps are;
			</para>
			<orderedlist numeration="arabic" spacing="compact">
				<listitem>
					<para>4.) The server sends a Certificate
					request after sending its own
					certificate.</para>
				</listitem>
				<listitem>
					<para>6.) The client provides its
					Certificate.</para>
				</listitem>
				<listitem>
					<para>8.) The client sends a Certificate
					verify message in which it encrypts a
					known piece of plaintext using its
					private key. The server uses the client
					certificate to decrypt, therefore
					ascertaining the client has the private
					key.</para>
				</listitem>
			</orderedlist>
		</sect3>
	</sect2>
        
        
        <sect2>
        <title>Some Important Observations</title>
        As can be seen from the description and the basic protocol flow there are many security 
        decisions and processes made seemlssly in a SSL hand-shake, all of which can have significant 
        consequences the web sites security. Whilst we can not hope to cover them all here some important observations
        are noted below.  
        
        <sect3>
        <title>SSL will not prevent many (if any) of the common attacks from happening</title>
        </sect3>
        
        <sect3>
        <title>The certificate must be valid and checked by the client</title>
        </sect3>
        
        <sect3>
        <title>The client proposes the cipher specs and key lengths (the security strength)</title>
        </sect3>
        
        <sect3>
        <title>The client proposes the SSL version</title>
        </sect3>
        
        <sect3>
        <title>The client proposes the key exchange algorithm</title>
        </sect3>

        <sect3>
        <title>X.509 certifiate extensions have been known to give the game away</title>
        </sect3>
        
        </sect2>

        
        
</sect1>
</chapter>
